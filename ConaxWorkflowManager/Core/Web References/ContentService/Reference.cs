//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace MPS.MPP.Auxiliary.ConaxWorkflowManager.Core.ContentService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContentServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ContentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetContentForEncryptedContentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentPricesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentsAvailableForPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentForIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentForObjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentForExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentForExternalId2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContentRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContentAndSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentAgreementContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceContentInContentAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContentPriceToServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAllContentToServiceWithPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveContentFromServicePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOrUpdateContentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportProfileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImportServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContentAssetServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContent2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContent3OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentLimitedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentPropertiesInBulkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportAssetUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentLimitedFromPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentFromPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOngoingEpgsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentInfoAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentInfoForServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentRightsOwnersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentAssetServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentAssetServerNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContentAssetServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentInfoForContentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentAgreementInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentAgreementInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDRMRevocationResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDRMLicenseForLicenseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDRMLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentURIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentURIFromEncryptedContentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindContentBySearchTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownloadTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleItemsForScheduleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpcomingScheduleItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduleItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleItemsOlderThanOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ContentService() {
            this.Url = global::MPS.MPP.Auxiliary.ConaxWorkflowManager.Core.Properties.Settings.Default.MPS_MPP_Auxiliary_ConaxWorkflowManager_Core_ContentService_ContentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetContentForEncryptedContentIdCompletedEventHandler GetContentForEncryptedContentIdCompleted;
        
        /// <remarks/>
        public event GetContentPricesCompletedEventHandler GetContentPricesCompleted;
        
        /// <remarks/>
        public event GetContentsAvailableForPriceCompletedEventHandler GetContentsAvailableForPriceCompleted;
        
        /// <remarks/>
        public event GetContentForIdCompletedEventHandler GetContentForIdCompleted;
        
        /// <remarks/>
        public event GetContentForObjectIdCompletedEventHandler GetContentForObjectIdCompleted;
        
        /// <remarks/>
        public event GetContentForExternalIdCompletedEventHandler GetContentForExternalIdCompleted;
        
        /// <remarks/>
        public event GetContentForExternalId2CompletedEventHandler GetContentForExternalId2Completed;
        
        /// <remarks/>
        public event AddContentRelationCompletedEventHandler AddContentRelationCompleted;
        
        /// <remarks/>
        public event DeleteContentCompletedEventHandler DeleteContentCompleted;
        
        /// <remarks/>
        public event DeleteContentAndSourcesCompletedEventHandler DeleteContentAndSourcesCompleted;
        
        /// <remarks/>
        public event GetContentListCompletedEventHandler GetContentListCompleted;
        
        /// <remarks/>
        public event GetContentAgreementContentCompletedEventHandler GetContentAgreementContentCompleted;
        
        /// <remarks/>
        public event ReplaceContentInContentAgreementCompletedEventHandler ReplaceContentInContentAgreementCompleted;
        
        /// <remarks/>
        public event AddContentPriceToServiceCompletedEventHandler AddContentPriceToServiceCompleted;
        
        /// <remarks/>
        public event AddAllContentToServiceWithPriceCompletedEventHandler AddAllContentToServiceWithPriceCompleted;
        
        /// <remarks/>
        public event RemoveContentFromServicePriceCompletedEventHandler RemoveContentFromServicePriceCompleted;
        
        /// <remarks/>
        public event UpdateContentPriceCompletedEventHandler UpdateContentPriceCompleted;
        
        /// <remarks/>
        public event SaveOrUpdateContentListCompletedEventHandler SaveOrUpdateContentListCompleted;
        
        /// <remarks/>
        public event GetImportProfileInfoCompletedEventHandler GetImportProfileInfoCompleted;
        
        /// <remarks/>
        public event GetImportServerCompletedEventHandler GetImportServerCompleted;
        
        /// <remarks/>
        public event AddImportServerCompletedEventHandler AddImportServerCompleted;
        
        /// <remarks/>
        public event AddContentAssetServerCompletedEventHandler AddContentAssetServerCompleted;
        
        /// <remarks/>
        public event AddContentCompletedEventHandler AddContentCompleted;
        
        /// <remarks/>
        public event UpdateContentCompletedEventHandler UpdateContentCompleted;
        
        /// <remarks/>
        public event UpdateContent2CompletedEventHandler UpdateContent2Completed;
        
        /// <remarks/>
        public event UpdateContent3CompletedEventHandler UpdateContent3Completed;
        
        /// <remarks/>
        public event UpdateContentLimitedCompletedEventHandler UpdateContentLimitedCompleted;
        
        /// <remarks/>
        public event UpdateContentSetCompletedEventHandler UpdateContentSetCompleted;
        
        /// <remarks/>
        public event UpdateContentPropertiesInBulkCompletedEventHandler UpdateContentPropertiesInBulkCompleted;
        
        /// <remarks/>
        public event ImportContentCompletedEventHandler ImportContentCompleted;
        
        /// <remarks/>
        public event ImportAssetUpdateCompletedEventHandler ImportAssetUpdateCompleted;
        
        /// <remarks/>
        public event GetContentCompletedEventHandler GetContentCompleted;
        
        /// <remarks/>
        public event GetContentLimitedFromPropertiesCompletedEventHandler GetContentLimitedFromPropertiesCompleted;
        
        /// <remarks/>
        public event GetContentFromPropertiesCompletedEventHandler GetContentFromPropertiesCompleted;
        
        /// <remarks/>
        public event GetOngoingEpgsCompletedEventHandler GetOngoingEpgsCompleted;
        
        /// <remarks/>
        public event GetContentInfoCompletedEventHandler GetContentInfoCompleted;
        
        /// <remarks/>
        public event GetContentInfoAsXMLCompletedEventHandler GetContentInfoAsXMLCompleted;
        
        /// <remarks/>
        public event GetContentInfoForServiceCompletedEventHandler GetContentInfoForServiceCompleted;
        
        /// <remarks/>
        public event GetAssetsCompletedEventHandler GetAssetsCompleted;
        
        /// <remarks/>
        public event GetAssetNamesCompletedEventHandler GetAssetNamesCompleted;
        
        /// <remarks/>
        public event GetContentRightsOwnersCompletedEventHandler GetContentRightsOwnersCompleted;
        
        /// <remarks/>
        public event UpdateAssetCompletedEventHandler UpdateAssetCompleted;
        
        /// <remarks/>
        public event GetContentAssetServerCompletedEventHandler GetContentAssetServerCompleted;
        
        /// <remarks/>
        public event GetContentAssetServerNamesCompletedEventHandler GetContentAssetServerNamesCompleted;
        
        /// <remarks/>
        public event DeleteContentAssetServerCompletedEventHandler DeleteContentAssetServerCompleted;
        
        /// <remarks/>
        public event GetContentInfoForContentListCompletedEventHandler GetContentInfoForContentListCompleted;
        
        /// <remarks/>
        public event GetContentAgreementInfo2CompletedEventHandler GetContentAgreementInfo2Completed;
        
        /// <remarks/>
        public event GetContentAgreementInfoCompletedEventHandler GetContentAgreementInfoCompleted;
        
        /// <remarks/>
        public event GenerateDRMRevocationResponseCompletedEventHandler GenerateDRMRevocationResponseCompleted;
        
        /// <remarks/>
        public event GenerateDRMLicenseForLicenseIdCompletedEventHandler GenerateDRMLicenseForLicenseIdCompleted;
        
        /// <remarks/>
        public event GenerateDRMLicenseCompletedEventHandler GenerateDRMLicenseCompleted;
        
        /// <remarks/>
        public event GetContentURICompletedEventHandler GetContentURICompleted;
        
        /// <remarks/>
        public event GetContentURIFromEncryptedContentIdCompletedEventHandler GetContentURIFromEncryptedContentIdCompleted;
        
        /// <remarks/>
        public event FindContentBySearchTagCompletedEventHandler FindContentBySearchTagCompleted;
        
        /// <remarks/>
        public event GetDownloadTicketCompletedEventHandler GetDownloadTicketCompleted;
        
        /// <remarks/>
        public event GetScheduleItemsForScheduleIdCompletedEventHandler GetScheduleItemsForScheduleIdCompleted;
        
        /// <remarks/>
        public event GetUpcomingScheduleItemsCompletedEventHandler GetUpcomingScheduleItemsCompleted;
        
        /// <remarks/>
        public event AddScheduleItemsCompletedEventHandler AddScheduleItemsCompleted;
        
        /// <remarks/>
        public event UpdateScheduleItemsCompletedEventHandler UpdateScheduleItemsCompleted;
        
        /// <remarks/>
        public event DeleteScheduleItemCompletedEventHandler DeleteScheduleItemCompleted;
        
        /// <remarks/>
        public event DeleteScheduleItemsOlderThanCompletedEventHandler DeleteScheduleItemsOlderThanCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentForEncryptedContentId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentForEncryptedContentId(string accountId, string encryptedContentId) {
            object[] results = this.Invoke("GetContentForEncryptedContentId", new object[] {
                        accountId,
                        encryptedContentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentForEncryptedContentIdAsync(string accountId, string encryptedContentId) {
            this.GetContentForEncryptedContentIdAsync(accountId, encryptedContentId, null);
        }
        
        /// <remarks/>
        public void GetContentForEncryptedContentIdAsync(string accountId, string encryptedContentId, object userState) {
            if ((this.GetContentForEncryptedContentIdOperationCompleted == null)) {
                this.GetContentForEncryptedContentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentForEncryptedContentIdOperationCompleted);
            }
            this.InvokeAsync("GetContentForEncryptedContentId", new object[] {
                        accountId,
                        encryptedContentId}, this.GetContentForEncryptedContentIdOperationCompleted, userState);
        }
        
        private void OnGetContentForEncryptedContentIdOperationCompleted(object arg) {
            if ((this.GetContentForEncryptedContentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentForEncryptedContentIdCompleted(this, new GetContentForEncryptedContentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentPrices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentPrices(string accountId, ulong contentObjectID, ulong serviceObjectID) {
            object[] results = this.Invoke("GetContentPrices", new object[] {
                        accountId,
                        contentObjectID,
                        serviceObjectID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentPricesAsync(string accountId, ulong contentObjectID, ulong serviceObjectID) {
            this.GetContentPricesAsync(accountId, contentObjectID, serviceObjectID, null);
        }
        
        /// <remarks/>
        public void GetContentPricesAsync(string accountId, ulong contentObjectID, ulong serviceObjectID, object userState) {
            if ((this.GetContentPricesOperationCompleted == null)) {
                this.GetContentPricesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentPricesOperationCompleted);
            }
            this.InvokeAsync("GetContentPrices", new object[] {
                        accountId,
                        contentObjectID,
                        serviceObjectID}, this.GetContentPricesOperationCompleted, userState);
        }
        
        private void OnGetContentPricesOperationCompleted(object arg) {
            if ((this.GetContentPricesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentPricesCompleted(this, new GetContentPricesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentsAvailableForPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentsAvailableForPrice(string accountId, ulong priceID) {
            object[] results = this.Invoke("GetContentsAvailableForPrice", new object[] {
                        accountId,
                        priceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentsAvailableForPriceAsync(string accountId, ulong priceID) {
            this.GetContentsAvailableForPriceAsync(accountId, priceID, null);
        }
        
        /// <remarks/>
        public void GetContentsAvailableForPriceAsync(string accountId, ulong priceID, object userState) {
            if ((this.GetContentsAvailableForPriceOperationCompleted == null)) {
                this.GetContentsAvailableForPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentsAvailableForPriceOperationCompleted);
            }
            this.InvokeAsync("GetContentsAvailableForPrice", new object[] {
                        accountId,
                        priceID}, this.GetContentsAvailableForPriceOperationCompleted, userState);
        }
        
        private void OnGetContentsAvailableForPriceOperationCompleted(object arg) {
            if ((this.GetContentsAvailableForPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentsAvailableForPriceCompleted(this, new GetContentsAvailableForPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentForId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentForId(string accountId, long contentId) {
            object[] results = this.Invoke("GetContentForId", new object[] {
                        accountId,
                        contentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentForIdAsync(string accountId, long contentId) {
            this.GetContentForIdAsync(accountId, contentId, null);
        }
        
        /// <remarks/>
        public void GetContentForIdAsync(string accountId, long contentId, object userState) {
            if ((this.GetContentForIdOperationCompleted == null)) {
                this.GetContentForIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentForIdOperationCompleted);
            }
            this.InvokeAsync("GetContentForId", new object[] {
                        accountId,
                        contentId}, this.GetContentForIdOperationCompleted, userState);
        }
        
        private void OnGetContentForIdOperationCompleted(object arg) {
            if ((this.GetContentForIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentForIdCompleted(this, new GetContentForIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentForObjectId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentForObjectId(string accountId, long objectId) {
            object[] results = this.Invoke("GetContentForObjectId", new object[] {
                        accountId,
                        objectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentForObjectIdAsync(string accountId, long objectId) {
            this.GetContentForObjectIdAsync(accountId, objectId, null);
        }
        
        /// <remarks/>
        public void GetContentForObjectIdAsync(string accountId, long objectId, object userState) {
            if ((this.GetContentForObjectIdOperationCompleted == null)) {
                this.GetContentForObjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentForObjectIdOperationCompleted);
            }
            this.InvokeAsync("GetContentForObjectId", new object[] {
                        accountId,
                        objectId}, this.GetContentForObjectIdOperationCompleted, userState);
        }
        
        private void OnGetContentForObjectIdOperationCompleted(object arg) {
            if ((this.GetContentForObjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentForObjectIdCompleted(this, new GetContentForObjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentForExternalId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentForExternalId(string accountId, string serviceName, string externalId) {
            object[] results = this.Invoke("GetContentForExternalId", new object[] {
                        accountId,
                        serviceName,
                        externalId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentForExternalIdAsync(string accountId, string serviceName, string externalId) {
            this.GetContentForExternalIdAsync(accountId, serviceName, externalId, null);
        }
        
        /// <remarks/>
        public void GetContentForExternalIdAsync(string accountId, string serviceName, string externalId, object userState) {
            if ((this.GetContentForExternalIdOperationCompleted == null)) {
                this.GetContentForExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentForExternalIdOperationCompleted);
            }
            this.InvokeAsync("GetContentForExternalId", new object[] {
                        accountId,
                        serviceName,
                        externalId}, this.GetContentForExternalIdOperationCompleted, userState);
        }
        
        private void OnGetContentForExternalIdOperationCompleted(object arg) {
            if ((this.GetContentForExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentForExternalIdCompleted(this, new GetContentForExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentForExternalId2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentForExternalId2(string accountId, string serviceName, string contentRightsOwnerName, string externalId) {
            object[] results = this.Invoke("GetContentForExternalId2", new object[] {
                        accountId,
                        serviceName,
                        contentRightsOwnerName,
                        externalId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentForExternalId2Async(string accountId, string serviceName, string contentRightsOwnerName, string externalId) {
            this.GetContentForExternalId2Async(accountId, serviceName, contentRightsOwnerName, externalId, null);
        }
        
        /// <remarks/>
        public void GetContentForExternalId2Async(string accountId, string serviceName, string contentRightsOwnerName, string externalId, object userState) {
            if ((this.GetContentForExternalId2OperationCompleted == null)) {
                this.GetContentForExternalId2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentForExternalId2OperationCompleted);
            }
            this.InvokeAsync("GetContentForExternalId2", new object[] {
                        accountId,
                        serviceName,
                        contentRightsOwnerName,
                        externalId}, this.GetContentForExternalId2OperationCompleted, userState);
        }
        
        private void OnGetContentForExternalId2OperationCompleted(object arg) {
            if ((this.GetContentForExternalId2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentForExternalId2Completed(this, new GetContentForExternalId2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContentRelation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddContentRelation(string accountId, long contentId, long relatedContentId) {
            object[] results = this.Invoke("AddContentRelation", new object[] {
                        accountId,
                        contentId,
                        relatedContentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddContentRelationAsync(string accountId, long contentId, long relatedContentId) {
            this.AddContentRelationAsync(accountId, contentId, relatedContentId, null);
        }
        
        /// <remarks/>
        public void AddContentRelationAsync(string accountId, long contentId, long relatedContentId, object userState) {
            if ((this.AddContentRelationOperationCompleted == null)) {
                this.AddContentRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContentRelationOperationCompleted);
            }
            this.InvokeAsync("AddContentRelation", new object[] {
                        accountId,
                        contentId,
                        relatedContentId}, this.AddContentRelationOperationCompleted, userState);
        }
        
        private void OnAddContentRelationOperationCompleted(object arg) {
            if ((this.AddContentRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContentRelationCompleted(this, new AddContentRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteContent(string accountId, long contentId) {
            object[] results = this.Invoke("DeleteContent", new object[] {
                        accountId,
                        contentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContentAsync(string accountId, long contentId) {
            this.DeleteContentAsync(accountId, contentId, null);
        }
        
        /// <remarks/>
        public void DeleteContentAsync(string accountId, long contentId, object userState) {
            if ((this.DeleteContentOperationCompleted == null)) {
                this.DeleteContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContentOperationCompleted);
            }
            this.InvokeAsync("DeleteContent", new object[] {
                        accountId,
                        contentId}, this.DeleteContentOperationCompleted, userState);
        }
        
        private void OnDeleteContentOperationCompleted(object arg) {
            if ((this.DeleteContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContentCompleted(this, new DeleteContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteContentAndSources", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteContentAndSources(string accountId, long contentId) {
            object[] results = this.Invoke("DeleteContentAndSources", new object[] {
                        accountId,
                        contentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContentAndSourcesAsync(string accountId, long contentId) {
            this.DeleteContentAndSourcesAsync(accountId, contentId, null);
        }
        
        /// <remarks/>
        public void DeleteContentAndSourcesAsync(string accountId, long contentId, object userState) {
            if ((this.DeleteContentAndSourcesOperationCompleted == null)) {
                this.DeleteContentAndSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContentAndSourcesOperationCompleted);
            }
            this.InvokeAsync("DeleteContentAndSources", new object[] {
                        accountId,
                        contentId}, this.DeleteContentAndSourcesOperationCompleted, userState);
        }
        
        private void OnDeleteContentAndSourcesOperationCompleted(object arg) {
            if ((this.DeleteContentAndSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContentAndSourcesCompleted(this, new DeleteContentAndSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentList(string accountId, string serviceName, string contentListName) {
            object[] results = this.Invoke("GetContentList", new object[] {
                        accountId,
                        serviceName,
                        contentListName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentListAsync(string accountId, string serviceName, string contentListName) {
            this.GetContentListAsync(accountId, serviceName, contentListName, null);
        }
        
        /// <remarks/>
        public void GetContentListAsync(string accountId, string serviceName, string contentListName, object userState) {
            if ((this.GetContentListOperationCompleted == null)) {
                this.GetContentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentListOperationCompleted);
            }
            this.InvokeAsync("GetContentList", new object[] {
                        accountId,
                        serviceName,
                        contentListName}, this.GetContentListOperationCompleted, userState);
        }
        
        private void OnGetContentListOperationCompleted(object arg) {
            if ((this.GetContentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentListCompleted(this, new GetContentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentAgreementContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentAgreementContent(string accountId, string contentAgreementName) {
            object[] results = this.Invoke("GetContentAgreementContent", new object[] {
                        accountId,
                        contentAgreementName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAgreementContentAsync(string accountId, string contentAgreementName) {
            this.GetContentAgreementContentAsync(accountId, contentAgreementName, null);
        }
        
        /// <remarks/>
        public void GetContentAgreementContentAsync(string accountId, string contentAgreementName, object userState) {
            if ((this.GetContentAgreementContentOperationCompleted == null)) {
                this.GetContentAgreementContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentAgreementContentOperationCompleted);
            }
            this.InvokeAsync("GetContentAgreementContent", new object[] {
                        accountId,
                        contentAgreementName}, this.GetContentAgreementContentOperationCompleted, userState);
        }
        
        private void OnGetContentAgreementContentOperationCompleted(object arg) {
            if ((this.GetContentAgreementContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentAgreementContentCompleted(this, new GetContentAgreementContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplaceContentInContentAgreement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceContentInContentAgreement(string accountId, string contentAgreementMetaDataXml) {
            object[] results = this.Invoke("ReplaceContentInContentAgreement", new object[] {
                        accountId,
                        contentAgreementMetaDataXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceContentInContentAgreementAsync(string accountId, string contentAgreementMetaDataXml) {
            this.ReplaceContentInContentAgreementAsync(accountId, contentAgreementMetaDataXml, null);
        }
        
        /// <remarks/>
        public void ReplaceContentInContentAgreementAsync(string accountId, string contentAgreementMetaDataXml, object userState) {
            if ((this.ReplaceContentInContentAgreementOperationCompleted == null)) {
                this.ReplaceContentInContentAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceContentInContentAgreementOperationCompleted);
            }
            this.InvokeAsync("ReplaceContentInContentAgreement", new object[] {
                        accountId,
                        contentAgreementMetaDataXml}, this.ReplaceContentInContentAgreementOperationCompleted, userState);
        }
        
        private void OnReplaceContentInContentAgreementOperationCompleted(object arg) {
            if ((this.ReplaceContentInContentAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceContentInContentAgreementCompleted(this, new ReplaceContentInContentAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContentPriceToService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddContentPriceToService(string accountId, ulong servicePriceId, ulong contentId, decimal price) {
            object[] results = this.Invoke("AddContentPriceToService", new object[] {
                        accountId,
                        servicePriceId,
                        contentId,
                        price});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddContentPriceToServiceAsync(string accountId, ulong servicePriceId, ulong contentId, decimal price) {
            this.AddContentPriceToServiceAsync(accountId, servicePriceId, contentId, price, null);
        }
        
        /// <remarks/>
        public void AddContentPriceToServiceAsync(string accountId, ulong servicePriceId, ulong contentId, decimal price, object userState) {
            if ((this.AddContentPriceToServiceOperationCompleted == null)) {
                this.AddContentPriceToServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContentPriceToServiceOperationCompleted);
            }
            this.InvokeAsync("AddContentPriceToService", new object[] {
                        accountId,
                        servicePriceId,
                        contentId,
                        price}, this.AddContentPriceToServiceOperationCompleted, userState);
        }
        
        private void OnAddContentPriceToServiceOperationCompleted(object arg) {
            if ((this.AddContentPriceToServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContentPriceToServiceCompleted(this, new AddContentPriceToServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAllContentToServiceWithPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddAllContentToServiceWithPrice(string accountId, ulong servicePriceId, decimal price) {
            object[] results = this.Invoke("AddAllContentToServiceWithPrice", new object[] {
                        accountId,
                        servicePriceId,
                        price});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAllContentToServiceWithPriceAsync(string accountId, ulong servicePriceId, decimal price) {
            this.AddAllContentToServiceWithPriceAsync(accountId, servicePriceId, price, null);
        }
        
        /// <remarks/>
        public void AddAllContentToServiceWithPriceAsync(string accountId, ulong servicePriceId, decimal price, object userState) {
            if ((this.AddAllContentToServiceWithPriceOperationCompleted == null)) {
                this.AddAllContentToServiceWithPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAllContentToServiceWithPriceOperationCompleted);
            }
            this.InvokeAsync("AddAllContentToServiceWithPrice", new object[] {
                        accountId,
                        servicePriceId,
                        price}, this.AddAllContentToServiceWithPriceOperationCompleted, userState);
        }
        
        private void OnAddAllContentToServiceWithPriceOperationCompleted(object arg) {
            if ((this.AddAllContentToServiceWithPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAllContentToServiceWithPriceCompleted(this, new AddAllContentToServiceWithPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveContentFromServicePrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveContentFromServicePrice(string accountId, ulong servicePriceId, ulong contentId) {
            object[] results = this.Invoke("RemoveContentFromServicePrice", new object[] {
                        accountId,
                        servicePriceId,
                        contentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveContentFromServicePriceAsync(string accountId, ulong servicePriceId, ulong contentId) {
            this.RemoveContentFromServicePriceAsync(accountId, servicePriceId, contentId, null);
        }
        
        /// <remarks/>
        public void RemoveContentFromServicePriceAsync(string accountId, ulong servicePriceId, ulong contentId, object userState) {
            if ((this.RemoveContentFromServicePriceOperationCompleted == null)) {
                this.RemoveContentFromServicePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveContentFromServicePriceOperationCompleted);
            }
            this.InvokeAsync("RemoveContentFromServicePrice", new object[] {
                        accountId,
                        servicePriceId,
                        contentId}, this.RemoveContentFromServicePriceOperationCompleted, userState);
        }
        
        private void OnRemoveContentFromServicePriceOperationCompleted(object arg) {
            if ((this.RemoveContentFromServicePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveContentFromServicePriceCompleted(this, new RemoveContentFromServicePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContentPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContentPrice(string accountId, ulong servicePriceId, ulong contentId, decimal price) {
            object[] results = this.Invoke("UpdateContentPrice", new object[] {
                        accountId,
                        servicePriceId,
                        contentId,
                        price});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentPriceAsync(string accountId, ulong servicePriceId, ulong contentId, decimal price) {
            this.UpdateContentPriceAsync(accountId, servicePriceId, contentId, price, null);
        }
        
        /// <remarks/>
        public void UpdateContentPriceAsync(string accountId, ulong servicePriceId, ulong contentId, decimal price, object userState) {
            if ((this.UpdateContentPriceOperationCompleted == null)) {
                this.UpdateContentPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateContentPrice", new object[] {
                        accountId,
                        servicePriceId,
                        contentId,
                        price}, this.UpdateContentPriceOperationCompleted, userState);
        }
        
        private void OnUpdateContentPriceOperationCompleted(object arg) {
            if ((this.UpdateContentPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentPriceCompleted(this, new UpdateContentPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrUpdateContentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveOrUpdateContentList(string accountId, string serviceName, string contentListMetaDataXml) {
            object[] results = this.Invoke("SaveOrUpdateContentList", new object[] {
                        accountId,
                        serviceName,
                        contentListMetaDataXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOrUpdateContentListAsync(string accountId, string serviceName, string contentListMetaDataXml) {
            this.SaveOrUpdateContentListAsync(accountId, serviceName, contentListMetaDataXml, null);
        }
        
        /// <remarks/>
        public void SaveOrUpdateContentListAsync(string accountId, string serviceName, string contentListMetaDataXml, object userState) {
            if ((this.SaveOrUpdateContentListOperationCompleted == null)) {
                this.SaveOrUpdateContentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOrUpdateContentListOperationCompleted);
            }
            this.InvokeAsync("SaveOrUpdateContentList", new object[] {
                        accountId,
                        serviceName,
                        contentListMetaDataXml}, this.SaveOrUpdateContentListOperationCompleted, userState);
        }
        
        private void OnSaveOrUpdateContentListOperationCompleted(object arg) {
            if ((this.SaveOrUpdateContentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOrUpdateContentListCompleted(this, new SaveOrUpdateContentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImportProfileInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImportProfileInfo(string accountId, string importServerName) {
            object[] results = this.Invoke("GetImportProfileInfo", new object[] {
                        accountId,
                        importServerName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImportProfileInfoAsync(string accountId, string importServerName) {
            this.GetImportProfileInfoAsync(accountId, importServerName, null);
        }
        
        /// <remarks/>
        public void GetImportProfileInfoAsync(string accountId, string importServerName, object userState) {
            if ((this.GetImportProfileInfoOperationCompleted == null)) {
                this.GetImportProfileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportProfileInfoOperationCompleted);
            }
            this.InvokeAsync("GetImportProfileInfo", new object[] {
                        accountId,
                        importServerName}, this.GetImportProfileInfoOperationCompleted, userState);
        }
        
        private void OnGetImportProfileInfoOperationCompleted(object arg) {
            if ((this.GetImportProfileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportProfileInfoCompleted(this, new GetImportProfileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImportServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImportServer(string accountId, string importServerName) {
            object[] results = this.Invoke("GetImportServer", new object[] {
                        accountId,
                        importServerName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImportServerAsync(string accountId, string importServerName) {
            this.GetImportServerAsync(accountId, importServerName, null);
        }
        
        /// <remarks/>
        public void GetImportServerAsync(string accountId, string importServerName, object userState) {
            if ((this.GetImportServerOperationCompleted == null)) {
                this.GetImportServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportServerOperationCompleted);
            }
            this.InvokeAsync("GetImportServer", new object[] {
                        accountId,
                        importServerName}, this.GetImportServerOperationCompleted, userState);
        }
        
        private void OnGetImportServerOperationCompleted(object arg) {
            if ((this.GetImportServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportServerCompleted(this, new GetImportServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddImportServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddImportServer(string accountId, string importServerXML, bool overRide) {
            object[] results = this.Invoke("AddImportServer", new object[] {
                        accountId,
                        importServerXML,
                        overRide});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddImportServerAsync(string accountId, string importServerXML, bool overRide) {
            this.AddImportServerAsync(accountId, importServerXML, overRide, null);
        }
        
        /// <remarks/>
        public void AddImportServerAsync(string accountId, string importServerXML, bool overRide, object userState) {
            if ((this.AddImportServerOperationCompleted == null)) {
                this.AddImportServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImportServerOperationCompleted);
            }
            this.InvokeAsync("AddImportServer", new object[] {
                        accountId,
                        importServerXML,
                        overRide}, this.AddImportServerOperationCompleted, userState);
        }
        
        private void OnAddImportServerOperationCompleted(object arg) {
            if ((this.AddImportServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImportServerCompleted(this, new AddImportServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContentAssetServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddContentAssetServer(string accountId, string contentAssetServerXML, bool overRide) {
            object[] results = this.Invoke("AddContentAssetServer", new object[] {
                        accountId,
                        contentAssetServerXML,
                        overRide});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddContentAssetServerAsync(string accountId, string contentAssetServerXML, bool overRide) {
            this.AddContentAssetServerAsync(accountId, contentAssetServerXML, overRide, null);
        }
        
        /// <remarks/>
        public void AddContentAssetServerAsync(string accountId, string contentAssetServerXML, bool overRide, object userState) {
            if ((this.AddContentAssetServerOperationCompleted == null)) {
                this.AddContentAssetServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContentAssetServerOperationCompleted);
            }
            this.InvokeAsync("AddContentAssetServer", new object[] {
                        accountId,
                        contentAssetServerXML,
                        overRide}, this.AddContentAssetServerOperationCompleted, userState);
        }
        
        private void OnAddContentAssetServerOperationCompleted(object arg) {
            if ((this.AddContentAssetServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContentAssetServerCompleted(this, new AddContentAssetServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddContent(string accountId, string contentMetadataXML) {
            object[] results = this.Invoke("AddContent", new object[] {
                        accountId,
                        contentMetadataXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddContentAsync(string accountId, string contentMetadataXML) {
            this.AddContentAsync(accountId, contentMetadataXML, null);
        }
        
        /// <remarks/>
        public void AddContentAsync(string accountId, string contentMetadataXML, object userState) {
            if ((this.AddContentOperationCompleted == null)) {
                this.AddContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContentOperationCompleted);
            }
            this.InvokeAsync("AddContent", new object[] {
                        accountId,
                        contentMetadataXML}, this.AddContentOperationCompleted, userState);
        }
        
        private void OnAddContentOperationCompleted(object arg) {
            if ((this.AddContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContentCompleted(this, new AddContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContent(string accountId, string contentMetadataXML) {
            object[] results = this.Invoke("UpdateContent", new object[] {
                        accountId,
                        contentMetadataXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentAsync(string accountId, string contentMetadataXML) {
            this.UpdateContentAsync(accountId, contentMetadataXML, null);
        }
        
        /// <remarks/>
        public void UpdateContentAsync(string accountId, string contentMetadataXML, object userState) {
            if ((this.UpdateContentOperationCompleted == null)) {
                this.UpdateContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentOperationCompleted);
            }
            this.InvokeAsync("UpdateContent", new object[] {
                        accountId,
                        contentMetadataXML}, this.UpdateContentOperationCompleted, userState);
        }
        
        private void OnUpdateContentOperationCompleted(object arg) {
            if ((this.UpdateContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentCompleted(this, new UpdateContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContent2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContent2(string accountId, string contentMetadataXML) {
            object[] results = this.Invoke("UpdateContent2", new object[] {
                        accountId,
                        contentMetadataXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContent2Async(string accountId, string contentMetadataXML) {
            this.UpdateContent2Async(accountId, contentMetadataXML, null);
        }
        
        /// <remarks/>
        public void UpdateContent2Async(string accountId, string contentMetadataXML, object userState) {
            if ((this.UpdateContent2OperationCompleted == null)) {
                this.UpdateContent2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContent2OperationCompleted);
            }
            this.InvokeAsync("UpdateContent2", new object[] {
                        accountId,
                        contentMetadataXML}, this.UpdateContent2OperationCompleted, userState);
        }
        
        private void OnUpdateContent2OperationCompleted(object arg) {
            if ((this.UpdateContent2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContent2Completed(this, new UpdateContent2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContent3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContent3(string accountId, string contentMetadataXML) {
            object[] results = this.Invoke("UpdateContent3", new object[] {
                        accountId,
                        contentMetadataXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContent3Async(string accountId, string contentMetadataXML) {
            this.UpdateContent3Async(accountId, contentMetadataXML, null);
        }
        
        /// <remarks/>
        public void UpdateContent3Async(string accountId, string contentMetadataXML, object userState) {
            if ((this.UpdateContent3OperationCompleted == null)) {
                this.UpdateContent3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContent3OperationCompleted);
            }
            this.InvokeAsync("UpdateContent3", new object[] {
                        accountId,
                        contentMetadataXML}, this.UpdateContent3OperationCompleted, userState);
        }
        
        private void OnUpdateContent3OperationCompleted(object arg) {
            if ((this.UpdateContent3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContent3Completed(this, new UpdateContent3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContentLimited", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContentLimited(string accountId, string contentMetadataXML) {
            object[] results = this.Invoke("UpdateContentLimited", new object[] {
                        accountId,
                        contentMetadataXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentLimitedAsync(string accountId, string contentMetadataXML) {
            this.UpdateContentLimitedAsync(accountId, contentMetadataXML, null);
        }
        
        /// <remarks/>
        public void UpdateContentLimitedAsync(string accountId, string contentMetadataXML, object userState) {
            if ((this.UpdateContentLimitedOperationCompleted == null)) {
                this.UpdateContentLimitedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentLimitedOperationCompleted);
            }
            this.InvokeAsync("UpdateContentLimited", new object[] {
                        accountId,
                        contentMetadataXML}, this.UpdateContentLimitedOperationCompleted, userState);
        }
        
        private void OnUpdateContentLimitedOperationCompleted(object arg) {
            if ((this.UpdateContentLimitedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentLimitedCompleted(this, new UpdateContentLimitedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContentSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContentSet(string accountId, string updateContentSetMetadataXML) {
            object[] results = this.Invoke("UpdateContentSet", new object[] {
                        accountId,
                        updateContentSetMetadataXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentSetAsync(string accountId, string updateContentSetMetadataXML) {
            this.UpdateContentSetAsync(accountId, updateContentSetMetadataXML, null);
        }
        
        /// <remarks/>
        public void UpdateContentSetAsync(string accountId, string updateContentSetMetadataXML, object userState) {
            if ((this.UpdateContentSetOperationCompleted == null)) {
                this.UpdateContentSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentSetOperationCompleted);
            }
            this.InvokeAsync("UpdateContentSet", new object[] {
                        accountId,
                        updateContentSetMetadataXML}, this.UpdateContentSetOperationCompleted, userState);
        }
        
        private void OnUpdateContentSetOperationCompleted(object arg) {
            if ((this.UpdateContentSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentSetCompleted(this, new UpdateContentSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContentPropertiesInBulk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContentPropertiesInBulk(string accountId, string updateContentPropertiesXML) {
            object[] results = this.Invoke("UpdateContentPropertiesInBulk", new object[] {
                        accountId,
                        updateContentPropertiesXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentPropertiesInBulkAsync(string accountId, string updateContentPropertiesXML) {
            this.UpdateContentPropertiesInBulkAsync(accountId, updateContentPropertiesXML, null);
        }
        
        /// <remarks/>
        public void UpdateContentPropertiesInBulkAsync(string accountId, string updateContentPropertiesXML, object userState) {
            if ((this.UpdateContentPropertiesInBulkOperationCompleted == null)) {
                this.UpdateContentPropertiesInBulkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentPropertiesInBulkOperationCompleted);
            }
            this.InvokeAsync("UpdateContentPropertiesInBulk", new object[] {
                        accountId,
                        updateContentPropertiesXML}, this.UpdateContentPropertiesInBulkOperationCompleted, userState);
        }
        
        private void OnUpdateContentPropertiesInBulkOperationCompleted(object arg) {
            if ((this.UpdateContentPropertiesInBulkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentPropertiesInBulkCompleted(this, new UpdateContentPropertiesInBulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportContent(string accountId, string contentMetadataXML, string importServerName, string importProfileName) {
            object[] results = this.Invoke("ImportContent", new object[] {
                        accountId,
                        contentMetadataXML,
                        importServerName,
                        importProfileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportContentAsync(string accountId, string contentMetadataXML, string importServerName, string importProfileName) {
            this.ImportContentAsync(accountId, contentMetadataXML, importServerName, importProfileName, null);
        }
        
        /// <remarks/>
        public void ImportContentAsync(string accountId, string contentMetadataXML, string importServerName, string importProfileName, object userState) {
            if ((this.ImportContentOperationCompleted == null)) {
                this.ImportContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportContentOperationCompleted);
            }
            this.InvokeAsync("ImportContent", new object[] {
                        accountId,
                        contentMetadataXML,
                        importServerName,
                        importProfileName}, this.ImportContentOperationCompleted, userState);
        }
        
        private void OnImportContentOperationCompleted(object arg) {
            if ((this.ImportContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportContentCompleted(this, new ImportContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportAssetUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportAssetUpdate(string accountId, string ImportAssetUpdateXML, string importServerName, string importProfileName) {
            object[] results = this.Invoke("ImportAssetUpdate", new object[] {
                        accountId,
                        ImportAssetUpdateXML,
                        importServerName,
                        importProfileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportAssetUpdateAsync(string accountId, string ImportAssetUpdateXML, string importServerName, string importProfileName) {
            this.ImportAssetUpdateAsync(accountId, ImportAssetUpdateXML, importServerName, importProfileName, null);
        }
        
        /// <remarks/>
        public void ImportAssetUpdateAsync(string accountId, string ImportAssetUpdateXML, string importServerName, string importProfileName, object userState) {
            if ((this.ImportAssetUpdateOperationCompleted == null)) {
                this.ImportAssetUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportAssetUpdateOperationCompleted);
            }
            this.InvokeAsync("ImportAssetUpdate", new object[] {
                        accountId,
                        ImportAssetUpdateXML,
                        importServerName,
                        importProfileName}, this.ImportAssetUpdateOperationCompleted, userState);
        }
        
        private void OnImportAssetUpdateOperationCompleted(object arg) {
            if ((this.ImportAssetUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportAssetUpdateCompleted(this, new ImportAssetUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContent(string accountId, string contentSearchParamsXML, bool includeMPPContext) {
            object[] results = this.Invoke("GetContent", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        includeMPPContext});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAsync(string accountId, string contentSearchParamsXML, bool includeMPPContext) {
            this.GetContentAsync(accountId, contentSearchParamsXML, includeMPPContext, null);
        }
        
        /// <remarks/>
        public void GetContentAsync(string accountId, string contentSearchParamsXML, bool includeMPPContext, object userState) {
            if ((this.GetContentOperationCompleted == null)) {
                this.GetContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentOperationCompleted);
            }
            this.InvokeAsync("GetContent", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        includeMPPContext}, this.GetContentOperationCompleted, userState);
        }
        
        private void OnGetContentOperationCompleted(object arg) {
            if ((this.GetContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentCompleted(this, new GetContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentLimitedFromProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentLimitedFromProperties(string accountId, string contentSearchParamsXML) {
            object[] results = this.Invoke("GetContentLimitedFromProperties", new object[] {
                        accountId,
                        contentSearchParamsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentLimitedFromPropertiesAsync(string accountId, string contentSearchParamsXML) {
            this.GetContentLimitedFromPropertiesAsync(accountId, contentSearchParamsXML, null);
        }
        
        /// <remarks/>
        public void GetContentLimitedFromPropertiesAsync(string accountId, string contentSearchParamsXML, object userState) {
            if ((this.GetContentLimitedFromPropertiesOperationCompleted == null)) {
                this.GetContentLimitedFromPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentLimitedFromPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetContentLimitedFromProperties", new object[] {
                        accountId,
                        contentSearchParamsXML}, this.GetContentLimitedFromPropertiesOperationCompleted, userState);
        }
        
        private void OnGetContentLimitedFromPropertiesOperationCompleted(object arg) {
            if ((this.GetContentLimitedFromPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentLimitedFromPropertiesCompleted(this, new GetContentLimitedFromPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentFromProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentFromProperties(string accountId, string contentSearchParamsXML, bool includeMPPContext) {
            object[] results = this.Invoke("GetContentFromProperties", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        includeMPPContext});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentFromPropertiesAsync(string accountId, string contentSearchParamsXML, bool includeMPPContext) {
            this.GetContentFromPropertiesAsync(accountId, contentSearchParamsXML, includeMPPContext, null);
        }
        
        /// <remarks/>
        public void GetContentFromPropertiesAsync(string accountId, string contentSearchParamsXML, bool includeMPPContext, object userState) {
            if ((this.GetContentFromPropertiesOperationCompleted == null)) {
                this.GetContentFromPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentFromPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetContentFromProperties", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        includeMPPContext}, this.GetContentFromPropertiesOperationCompleted, userState);
        }
        
        private void OnGetContentFromPropertiesOperationCompleted(object arg) {
            if ((this.GetContentFromPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentFromPropertiesCompleted(this, new GetContentFromPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOngoingEpgs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOngoingEpgs(string accountId, string xmlWithIdsOfEpgsToIgnore, string channelId, string eventDateTo, int processIntervalInMinutes, bool zipReply) {
            object[] results = this.Invoke("GetOngoingEpgs", new object[] {
                        accountId,
                        xmlWithIdsOfEpgsToIgnore,
                        channelId,
                        eventDateTo,
                        processIntervalInMinutes,
                        zipReply});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOngoingEpgsAsync(string accountId, string xmlWithIdsOfEpgsToIgnore, string channelId, string eventDateTo, int processIntervalInMinutes, bool zipReply) {
            this.GetOngoingEpgsAsync(accountId, xmlWithIdsOfEpgsToIgnore, channelId, eventDateTo, processIntervalInMinutes, zipReply, null);
        }
        
        /// <remarks/>
        public void GetOngoingEpgsAsync(string accountId, string xmlWithIdsOfEpgsToIgnore, string channelId, string eventDateTo, int processIntervalInMinutes, bool zipReply, object userState) {
            if ((this.GetOngoingEpgsOperationCompleted == null)) {
                this.GetOngoingEpgsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOngoingEpgsOperationCompleted);
            }
            this.InvokeAsync("GetOngoingEpgs", new object[] {
                        accountId,
                        xmlWithIdsOfEpgsToIgnore,
                        channelId,
                        eventDateTo,
                        processIntervalInMinutes,
                        zipReply}, this.GetOngoingEpgsOperationCompleted, userState);
        }
        
        private void OnGetOngoingEpgsOperationCompleted(object arg) {
            if ((this.GetOngoingEpgsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOngoingEpgsCompleted(this, new GetOngoingEpgsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentInfo(string accountId, string contentSearchParamsXML, string sortOption) {
            object[] results = this.Invoke("GetContentInfo", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        sortOption});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentInfoAsync(string accountId, string contentSearchParamsXML, string sortOption) {
            this.GetContentInfoAsync(accountId, contentSearchParamsXML, sortOption, null);
        }
        
        /// <remarks/>
        public void GetContentInfoAsync(string accountId, string contentSearchParamsXML, string sortOption, object userState) {
            if ((this.GetContentInfoOperationCompleted == null)) {
                this.GetContentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentInfoOperationCompleted);
            }
            this.InvokeAsync("GetContentInfo", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        sortOption}, this.GetContentInfoOperationCompleted, userState);
        }
        
        private void OnGetContentInfoOperationCompleted(object arg) {
            if ((this.GetContentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentInfoCompleted(this, new GetContentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentInfoAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetContentInfoAsXML(string accountId, string contentSearchParamsXML, string sortOption) {
            object[] results = this.Invoke("GetContentInfoAsXML", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        sortOption});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentInfoAsXMLAsync(string accountId, string contentSearchParamsXML, string sortOption) {
            this.GetContentInfoAsXMLAsync(accountId, contentSearchParamsXML, sortOption, null);
        }
        
        /// <remarks/>
        public void GetContentInfoAsXMLAsync(string accountId, string contentSearchParamsXML, string sortOption, object userState) {
            if ((this.GetContentInfoAsXMLOperationCompleted == null)) {
                this.GetContentInfoAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentInfoAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetContentInfoAsXML", new object[] {
                        accountId,
                        contentSearchParamsXML,
                        sortOption}, this.GetContentInfoAsXMLOperationCompleted, userState);
        }
        
        private void OnGetContentInfoAsXMLOperationCompleted(object arg) {
            if ((this.GetContentInfoAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentInfoAsXMLCompleted(this, new GetContentInfoAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentInfoForService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetContentInfoForService(string accountId, string serviceName) {
            object[] results = this.Invoke("GetContentInfoForService", new object[] {
                        accountId,
                        serviceName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentInfoForServiceAsync(string accountId, string serviceName) {
            this.GetContentInfoForServiceAsync(accountId, serviceName, null);
        }
        
        /// <remarks/>
        public void GetContentInfoForServiceAsync(string accountId, string serviceName, object userState) {
            if ((this.GetContentInfoForServiceOperationCompleted == null)) {
                this.GetContentInfoForServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentInfoForServiceOperationCompleted);
            }
            this.InvokeAsync("GetContentInfoForService", new object[] {
                        accountId,
                        serviceName}, this.GetContentInfoForServiceOperationCompleted, userState);
        }
        
        private void OnGetContentInfoForServiceOperationCompleted(object arg) {
            if ((this.GetContentInfoForServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentInfoForServiceCompleted(this, new GetContentInfoForServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssets", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAssets(string accountId, string assetSearchParametersXML) {
            object[] results = this.Invoke("GetAssets", new object[] {
                        accountId,
                        assetSearchParametersXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetsAsync(string accountId, string assetSearchParametersXML) {
            this.GetAssetsAsync(accountId, assetSearchParametersXML, null);
        }
        
        /// <remarks/>
        public void GetAssetsAsync(string accountId, string assetSearchParametersXML, object userState) {
            if ((this.GetAssetsOperationCompleted == null)) {
                this.GetAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetsOperationCompleted);
            }
            this.InvokeAsync("GetAssets", new object[] {
                        accountId,
                        assetSearchParametersXML}, this.GetAssetsOperationCompleted, userState);
        }
        
        private void OnGetAssetsOperationCompleted(object arg) {
            if ((this.GetAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetsCompleted(this, new GetAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssetNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAssetNames(string accountId, string getAssetNamesParameters) {
            object[] results = this.Invoke("GetAssetNames", new object[] {
                        accountId,
                        getAssetNamesParameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetNamesAsync(string accountId, string getAssetNamesParameters) {
            this.GetAssetNamesAsync(accountId, getAssetNamesParameters, null);
        }
        
        /// <remarks/>
        public void GetAssetNamesAsync(string accountId, string getAssetNamesParameters, object userState) {
            if ((this.GetAssetNamesOperationCompleted == null)) {
                this.GetAssetNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetNamesOperationCompleted);
            }
            this.InvokeAsync("GetAssetNames", new object[] {
                        accountId,
                        getAssetNamesParameters}, this.GetAssetNamesOperationCompleted, userState);
        }
        
        private void OnGetAssetNamesOperationCompleted(object arg) {
            if ((this.GetAssetNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetNamesCompleted(this, new GetAssetNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentRightsOwners", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentRightsOwners(string accountId) {
            object[] results = this.Invoke("GetContentRightsOwners", new object[] {
                        accountId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentRightsOwnersAsync(string accountId) {
            this.GetContentRightsOwnersAsync(accountId, null);
        }
        
        /// <remarks/>
        public void GetContentRightsOwnersAsync(string accountId, object userState) {
            if ((this.GetContentRightsOwnersOperationCompleted == null)) {
                this.GetContentRightsOwnersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentRightsOwnersOperationCompleted);
            }
            this.InvokeAsync("GetContentRightsOwners", new object[] {
                        accountId}, this.GetContentRightsOwnersOperationCompleted, userState);
        }
        
        private void OnGetContentRightsOwnersOperationCompleted(object arg) {
            if ((this.GetContentRightsOwnersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentRightsOwnersCompleted(this, new GetContentRightsOwnersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAsset(string accountId, string UpdateAssetXML) {
            object[] results = this.Invoke("UpdateAsset", new object[] {
                        accountId,
                        UpdateAssetXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAssetAsync(string accountId, string UpdateAssetXML) {
            this.UpdateAssetAsync(accountId, UpdateAssetXML, null);
        }
        
        /// <remarks/>
        public void UpdateAssetAsync(string accountId, string UpdateAssetXML, object userState) {
            if ((this.UpdateAssetOperationCompleted == null)) {
                this.UpdateAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAssetOperationCompleted);
            }
            this.InvokeAsync("UpdateAsset", new object[] {
                        accountId,
                        UpdateAssetXML}, this.UpdateAssetOperationCompleted, userState);
        }
        
        private void OnUpdateAssetOperationCompleted(object arg) {
            if ((this.UpdateAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAssetCompleted(this, new UpdateAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentAssetServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentAssetServer(string accountId, string name) {
            object[] results = this.Invoke("GetContentAssetServer", new object[] {
                        accountId,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAssetServerAsync(string accountId, string name) {
            this.GetContentAssetServerAsync(accountId, name, null);
        }
        
        /// <remarks/>
        public void GetContentAssetServerAsync(string accountId, string name, object userState) {
            if ((this.GetContentAssetServerOperationCompleted == null)) {
                this.GetContentAssetServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentAssetServerOperationCompleted);
            }
            this.InvokeAsync("GetContentAssetServer", new object[] {
                        accountId,
                        name}, this.GetContentAssetServerOperationCompleted, userState);
        }
        
        private void OnGetContentAssetServerOperationCompleted(object arg) {
            if ((this.GetContentAssetServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentAssetServerCompleted(this, new GetContentAssetServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentAssetServerNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentAssetServerNames(string accountId, string getContentAssetServerNamesParametersXML) {
            object[] results = this.Invoke("GetContentAssetServerNames", new object[] {
                        accountId,
                        getContentAssetServerNamesParametersXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAssetServerNamesAsync(string accountId, string getContentAssetServerNamesParametersXML) {
            this.GetContentAssetServerNamesAsync(accountId, getContentAssetServerNamesParametersXML, null);
        }
        
        /// <remarks/>
        public void GetContentAssetServerNamesAsync(string accountId, string getContentAssetServerNamesParametersXML, object userState) {
            if ((this.GetContentAssetServerNamesOperationCompleted == null)) {
                this.GetContentAssetServerNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentAssetServerNamesOperationCompleted);
            }
            this.InvokeAsync("GetContentAssetServerNames", new object[] {
                        accountId,
                        getContentAssetServerNamesParametersXML}, this.GetContentAssetServerNamesOperationCompleted, userState);
        }
        
        private void OnGetContentAssetServerNamesOperationCompleted(object arg) {
            if ((this.GetContentAssetServerNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentAssetServerNamesCompleted(this, new GetContentAssetServerNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteContentAssetServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteContentAssetServer(string accountId, string name) {
            object[] results = this.Invoke("DeleteContentAssetServer", new object[] {
                        accountId,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContentAssetServerAsync(string accountId, string name) {
            this.DeleteContentAssetServerAsync(accountId, name, null);
        }
        
        /// <remarks/>
        public void DeleteContentAssetServerAsync(string accountId, string name, object userState) {
            if ((this.DeleteContentAssetServerOperationCompleted == null)) {
                this.DeleteContentAssetServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContentAssetServerOperationCompleted);
            }
            this.InvokeAsync("DeleteContentAssetServer", new object[] {
                        accountId,
                        name}, this.DeleteContentAssetServerOperationCompleted, userState);
        }
        
        private void OnDeleteContentAssetServerOperationCompleted(object arg) {
            if ((this.DeleteContentAssetServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContentAssetServerCompleted(this, new DeleteContentAssetServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentInfoForContentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetContentInfoForContentList(string accountId, string contentListName) {
            object[] results = this.Invoke("GetContentInfoForContentList", new object[] {
                        accountId,
                        contentListName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentInfoForContentListAsync(string accountId, string contentListName) {
            this.GetContentInfoForContentListAsync(accountId, contentListName, null);
        }
        
        /// <remarks/>
        public void GetContentInfoForContentListAsync(string accountId, string contentListName, object userState) {
            if ((this.GetContentInfoForContentListOperationCompleted == null)) {
                this.GetContentInfoForContentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentInfoForContentListOperationCompleted);
            }
            this.InvokeAsync("GetContentInfoForContentList", new object[] {
                        accountId,
                        contentListName}, this.GetContentInfoForContentListOperationCompleted, userState);
        }
        
        private void OnGetContentInfoForContentListOperationCompleted(object arg) {
            if ((this.GetContentInfoForContentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentInfoForContentListCompleted(this, new GetContentInfoForContentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentAgreementInfo2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentAgreementInfo2(string accountId, string contentRightsOwnerName, bool returnContentData) {
            object[] results = this.Invoke("GetContentAgreementInfo2", new object[] {
                        accountId,
                        contentRightsOwnerName,
                        returnContentData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAgreementInfo2Async(string accountId, string contentRightsOwnerName, bool returnContentData) {
            this.GetContentAgreementInfo2Async(accountId, contentRightsOwnerName, returnContentData, null);
        }
        
        /// <remarks/>
        public void GetContentAgreementInfo2Async(string accountId, string contentRightsOwnerName, bool returnContentData, object userState) {
            if ((this.GetContentAgreementInfo2OperationCompleted == null)) {
                this.GetContentAgreementInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentAgreementInfo2OperationCompleted);
            }
            this.InvokeAsync("GetContentAgreementInfo2", new object[] {
                        accountId,
                        contentRightsOwnerName,
                        returnContentData}, this.GetContentAgreementInfo2OperationCompleted, userState);
        }
        
        private void OnGetContentAgreementInfo2OperationCompleted(object arg) {
            if ((this.GetContentAgreementInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentAgreementInfo2Completed(this, new GetContentAgreementInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentAgreementInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentAgreementInfo(string accountId, string contentRightsOwnerName) {
            object[] results = this.Invoke("GetContentAgreementInfo", new object[] {
                        accountId,
                        contentRightsOwnerName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAgreementInfoAsync(string accountId, string contentRightsOwnerName) {
            this.GetContentAgreementInfoAsync(accountId, contentRightsOwnerName, null);
        }
        
        /// <remarks/>
        public void GetContentAgreementInfoAsync(string accountId, string contentRightsOwnerName, object userState) {
            if ((this.GetContentAgreementInfoOperationCompleted == null)) {
                this.GetContentAgreementInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentAgreementInfoOperationCompleted);
            }
            this.InvokeAsync("GetContentAgreementInfo", new object[] {
                        accountId,
                        contentRightsOwnerName}, this.GetContentAgreementInfoOperationCompleted, userState);
        }
        
        private void OnGetContentAgreementInfoOperationCompleted(object arg) {
            if ((this.GetContentAgreementInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentAgreementInfoCompleted(this, new GetContentAgreementInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateDRMRevocationResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateDRMRevocationResponse(string accountId, string strChallenge, string keyId) {
            object[] results = this.Invoke("GenerateDRMRevocationResponse", new object[] {
                        accountId,
                        strChallenge,
                        keyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDRMRevocationResponseAsync(string accountId, string strChallenge, string keyId) {
            this.GenerateDRMRevocationResponseAsync(accountId, strChallenge, keyId, null);
        }
        
        /// <remarks/>
        public void GenerateDRMRevocationResponseAsync(string accountId, string strChallenge, string keyId, object userState) {
            if ((this.GenerateDRMRevocationResponseOperationCompleted == null)) {
                this.GenerateDRMRevocationResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDRMRevocationResponseOperationCompleted);
            }
            this.InvokeAsync("GenerateDRMRevocationResponse", new object[] {
                        accountId,
                        strChallenge,
                        keyId}, this.GenerateDRMRevocationResponseOperationCompleted, userState);
        }
        
        private void OnGenerateDRMRevocationResponseOperationCompleted(object arg) {
            if ((this.GenerateDRMRevocationResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDRMRevocationResponseCompleted(this, new GenerateDRMRevocationResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateDRMLicenseForLicenseId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateDRMLicenseForLicenseId(string accountId, string machineId, string licenseId, string clientInfo) {
            object[] results = this.Invoke("GenerateDRMLicenseForLicenseId", new object[] {
                        accountId,
                        machineId,
                        licenseId,
                        clientInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDRMLicenseForLicenseIdAsync(string accountId, string machineId, string licenseId, string clientInfo) {
            this.GenerateDRMLicenseForLicenseIdAsync(accountId, machineId, licenseId, clientInfo, null);
        }
        
        /// <remarks/>
        public void GenerateDRMLicenseForLicenseIdAsync(string accountId, string machineId, string licenseId, string clientInfo, object userState) {
            if ((this.GenerateDRMLicenseForLicenseIdOperationCompleted == null)) {
                this.GenerateDRMLicenseForLicenseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDRMLicenseForLicenseIdOperationCompleted);
            }
            this.InvokeAsync("GenerateDRMLicenseForLicenseId", new object[] {
                        accountId,
                        machineId,
                        licenseId,
                        clientInfo}, this.GenerateDRMLicenseForLicenseIdOperationCompleted, userState);
        }
        
        private void OnGenerateDRMLicenseForLicenseIdOperationCompleted(object arg) {
            if ((this.GenerateDRMLicenseForLicenseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDRMLicenseForLicenseIdCompleted(this, new GenerateDRMLicenseForLicenseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateDRMLicense", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateDRMLicense(string accountId, string subscriberId, string serviceId, string contentId, string contentAssetGUID, string clientInfo) {
            object[] results = this.Invoke("GenerateDRMLicense", new object[] {
                        accountId,
                        subscriberId,
                        serviceId,
                        contentId,
                        contentAssetGUID,
                        clientInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDRMLicenseAsync(string accountId, string subscriberId, string serviceId, string contentId, string contentAssetGUID, string clientInfo) {
            this.GenerateDRMLicenseAsync(accountId, subscriberId, serviceId, contentId, contentAssetGUID, clientInfo, null);
        }
        
        /// <remarks/>
        public void GenerateDRMLicenseAsync(string accountId, string subscriberId, string serviceId, string contentId, string contentAssetGUID, string clientInfo, object userState) {
            if ((this.GenerateDRMLicenseOperationCompleted == null)) {
                this.GenerateDRMLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDRMLicenseOperationCompleted);
            }
            this.InvokeAsync("GenerateDRMLicense", new object[] {
                        accountId,
                        subscriberId,
                        serviceId,
                        contentId,
                        contentAssetGUID,
                        clientInfo}, this.GenerateDRMLicenseOperationCompleted, userState);
        }
        
        private void OnGenerateDRMLicenseOperationCompleted(object arg) {
            if ((this.GenerateDRMLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDRMLicenseCompleted(this, new GenerateDRMLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentURI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentURI(string accountId, int contentId, string subscriberContextXML, string deliveryMethod, string languageISO, bool needTrailer) {
            object[] results = this.Invoke("GetContentURI", new object[] {
                        accountId,
                        contentId,
                        subscriberContextXML,
                        deliveryMethod,
                        languageISO,
                        needTrailer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentURIAsync(string accountId, int contentId, string subscriberContextXML, string deliveryMethod, string languageISO, bool needTrailer) {
            this.GetContentURIAsync(accountId, contentId, subscriberContextXML, deliveryMethod, languageISO, needTrailer, null);
        }
        
        /// <remarks/>
        public void GetContentURIAsync(string accountId, int contentId, string subscriberContextXML, string deliveryMethod, string languageISO, bool needTrailer, object userState) {
            if ((this.GetContentURIOperationCompleted == null)) {
                this.GetContentURIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentURIOperationCompleted);
            }
            this.InvokeAsync("GetContentURI", new object[] {
                        accountId,
                        contentId,
                        subscriberContextXML,
                        deliveryMethod,
                        languageISO,
                        needTrailer}, this.GetContentURIOperationCompleted, userState);
        }
        
        private void OnGetContentURIOperationCompleted(object arg) {
            if ((this.GetContentURICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentURICompleted(this, new GetContentURICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentURIFromEncryptedContentId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentURIFromEncryptedContentId(string accountId, string encryptedContentId, string subscriberContextXML, string deliveryMethod, string languageISO, bool needTrailer) {
            object[] results = this.Invoke("GetContentURIFromEncryptedContentId", new object[] {
                        accountId,
                        encryptedContentId,
                        subscriberContextXML,
                        deliveryMethod,
                        languageISO,
                        needTrailer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentURIFromEncryptedContentIdAsync(string accountId, string encryptedContentId, string subscriberContextXML, string deliveryMethod, string languageISO, bool needTrailer) {
            this.GetContentURIFromEncryptedContentIdAsync(accountId, encryptedContentId, subscriberContextXML, deliveryMethod, languageISO, needTrailer, null);
        }
        
        /// <remarks/>
        public void GetContentURIFromEncryptedContentIdAsync(string accountId, string encryptedContentId, string subscriberContextXML, string deliveryMethod, string languageISO, bool needTrailer, object userState) {
            if ((this.GetContentURIFromEncryptedContentIdOperationCompleted == null)) {
                this.GetContentURIFromEncryptedContentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentURIFromEncryptedContentIdOperationCompleted);
            }
            this.InvokeAsync("GetContentURIFromEncryptedContentId", new object[] {
                        accountId,
                        encryptedContentId,
                        subscriberContextXML,
                        deliveryMethod,
                        languageISO,
                        needTrailer}, this.GetContentURIFromEncryptedContentIdOperationCompleted, userState);
        }
        
        private void OnGetContentURIFromEncryptedContentIdOperationCompleted(object arg) {
            if ((this.GetContentURIFromEncryptedContentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentURIFromEncryptedContentIdCompleted(this, new GetContentURIFromEncryptedContentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindContentBySearchTag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindContentBySearchTag(string accountId, string serviceName, string searchTag, string subscriberContextXML) {
            object[] results = this.Invoke("FindContentBySearchTag", new object[] {
                        accountId,
                        serviceName,
                        searchTag,
                        subscriberContextXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindContentBySearchTagAsync(string accountId, string serviceName, string searchTag, string subscriberContextXML) {
            this.FindContentBySearchTagAsync(accountId, serviceName, searchTag, subscriberContextXML, null);
        }
        
        /// <remarks/>
        public void FindContentBySearchTagAsync(string accountId, string serviceName, string searchTag, string subscriberContextXML, object userState) {
            if ((this.FindContentBySearchTagOperationCompleted == null)) {
                this.FindContentBySearchTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindContentBySearchTagOperationCompleted);
            }
            this.InvokeAsync("FindContentBySearchTag", new object[] {
                        accountId,
                        serviceName,
                        searchTag,
                        subscriberContextXML}, this.FindContentBySearchTagOperationCompleted, userState);
        }
        
        private void OnFindContentBySearchTagOperationCompleted(object arg) {
            if ((this.FindContentBySearchTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindContentBySearchTagCompleted(this, new FindContentBySearchTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDownloadTicket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDownloadTicket(string accountId, string machineId, string downloadTicketId) {
            object[] results = this.Invoke("GetDownloadTicket", new object[] {
                        accountId,
                        machineId,
                        downloadTicketId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDownloadTicketAsync(string accountId, string machineId, string downloadTicketId) {
            this.GetDownloadTicketAsync(accountId, machineId, downloadTicketId, null);
        }
        
        /// <remarks/>
        public void GetDownloadTicketAsync(string accountId, string machineId, string downloadTicketId, object userState) {
            if ((this.GetDownloadTicketOperationCompleted == null)) {
                this.GetDownloadTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownloadTicketOperationCompleted);
            }
            this.InvokeAsync("GetDownloadTicket", new object[] {
                        accountId,
                        machineId,
                        downloadTicketId}, this.GetDownloadTicketOperationCompleted, userState);
        }
        
        private void OnGetDownloadTicketOperationCompleted(object arg) {
            if ((this.GetDownloadTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownloadTicketCompleted(this, new GetDownloadTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleItemsForScheduleId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetScheduleItemsForScheduleId(string accountId, string scheduleIdString, string fromDateTimeString, string toDateTimeString) {
            object[] results = this.Invoke("GetScheduleItemsForScheduleId", new object[] {
                        accountId,
                        scheduleIdString,
                        fromDateTimeString,
                        toDateTimeString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleItemsForScheduleIdAsync(string accountId, string scheduleIdString, string fromDateTimeString, string toDateTimeString) {
            this.GetScheduleItemsForScheduleIdAsync(accountId, scheduleIdString, fromDateTimeString, toDateTimeString, null);
        }
        
        /// <remarks/>
        public void GetScheduleItemsForScheduleIdAsync(string accountId, string scheduleIdString, string fromDateTimeString, string toDateTimeString, object userState) {
            if ((this.GetScheduleItemsForScheduleIdOperationCompleted == null)) {
                this.GetScheduleItemsForScheduleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleItemsForScheduleIdOperationCompleted);
            }
            this.InvokeAsync("GetScheduleItemsForScheduleId", new object[] {
                        accountId,
                        scheduleIdString,
                        fromDateTimeString,
                        toDateTimeString}, this.GetScheduleItemsForScheduleIdOperationCompleted, userState);
        }
        
        private void OnGetScheduleItemsForScheduleIdOperationCompleted(object arg) {
            if ((this.GetScheduleItemsForScheduleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleItemsForScheduleIdCompleted(this, new GetScheduleItemsForScheduleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpcomingScheduleItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUpcomingScheduleItems(string accountId, string scheduleIdString, string noItemsStr) {
            object[] results = this.Invoke("GetUpcomingScheduleItems", new object[] {
                        accountId,
                        scheduleIdString,
                        noItemsStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpcomingScheduleItemsAsync(string accountId, string scheduleIdString, string noItemsStr) {
            this.GetUpcomingScheduleItemsAsync(accountId, scheduleIdString, noItemsStr, null);
        }
        
        /// <remarks/>
        public void GetUpcomingScheduleItemsAsync(string accountId, string scheduleIdString, string noItemsStr, object userState) {
            if ((this.GetUpcomingScheduleItemsOperationCompleted == null)) {
                this.GetUpcomingScheduleItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpcomingScheduleItemsOperationCompleted);
            }
            this.InvokeAsync("GetUpcomingScheduleItems", new object[] {
                        accountId,
                        scheduleIdString,
                        noItemsStr}, this.GetUpcomingScheduleItemsOperationCompleted, userState);
        }
        
        private void OnGetUpcomingScheduleItemsOperationCompleted(object arg) {
            if ((this.GetUpcomingScheduleItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpcomingScheduleItemsCompleted(this, new GetUpcomingScheduleItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddScheduleItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddScheduleItems(string accountId, string scheduleItemsXml) {
            object[] results = this.Invoke("AddScheduleItems", new object[] {
                        accountId,
                        scheduleItemsXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleItemsAsync(string accountId, string scheduleItemsXml) {
            this.AddScheduleItemsAsync(accountId, scheduleItemsXml, null);
        }
        
        /// <remarks/>
        public void AddScheduleItemsAsync(string accountId, string scheduleItemsXml, object userState) {
            if ((this.AddScheduleItemsOperationCompleted == null)) {
                this.AddScheduleItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleItemsOperationCompleted);
            }
            this.InvokeAsync("AddScheduleItems", new object[] {
                        accountId,
                        scheduleItemsXml}, this.AddScheduleItemsOperationCompleted, userState);
        }
        
        private void OnAddScheduleItemsOperationCompleted(object arg) {
            if ((this.AddScheduleItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleItemsCompleted(this, new AddScheduleItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateScheduleItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateScheduleItems(string accountId, string scheduleItemsXml) {
            object[] results = this.Invoke("UpdateScheduleItems", new object[] {
                        accountId,
                        scheduleItemsXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateScheduleItemsAsync(string accountId, string scheduleItemsXml) {
            this.UpdateScheduleItemsAsync(accountId, scheduleItemsXml, null);
        }
        
        /// <remarks/>
        public void UpdateScheduleItemsAsync(string accountId, string scheduleItemsXml, object userState) {
            if ((this.UpdateScheduleItemsOperationCompleted == null)) {
                this.UpdateScheduleItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduleItemsOperationCompleted);
            }
            this.InvokeAsync("UpdateScheduleItems", new object[] {
                        accountId,
                        scheduleItemsXml}, this.UpdateScheduleItemsOperationCompleted, userState);
        }
        
        private void OnUpdateScheduleItemsOperationCompleted(object arg) {
            if ((this.UpdateScheduleItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduleItemsCompleted(this, new UpdateScheduleItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteScheduleItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteScheduleItem(string accountId, string scheduleIdString, string itemIdStr) {
            object[] results = this.Invoke("DeleteScheduleItem", new object[] {
                        accountId,
                        scheduleIdString,
                        itemIdStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleItemAsync(string accountId, string scheduleIdString, string itemIdStr) {
            this.DeleteScheduleItemAsync(accountId, scheduleIdString, itemIdStr, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleItemAsync(string accountId, string scheduleIdString, string itemIdStr, object userState) {
            if ((this.DeleteScheduleItemOperationCompleted == null)) {
                this.DeleteScheduleItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleItemOperationCompleted);
            }
            this.InvokeAsync("DeleteScheduleItem", new object[] {
                        accountId,
                        scheduleIdString,
                        itemIdStr}, this.DeleteScheduleItemOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleItemOperationCompleted(object arg) {
            if ((this.DeleteScheduleItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleItemCompleted(this, new DeleteScheduleItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteScheduleItemsOlderThan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteScheduleItemsOlderThan(string accountId, string scheduleIdString, string olderThanDateTimeString) {
            object[] results = this.Invoke("DeleteScheduleItemsOlderThan", new object[] {
                        accountId,
                        scheduleIdString,
                        olderThanDateTimeString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleItemsOlderThanAsync(string accountId, string scheduleIdString, string olderThanDateTimeString) {
            this.DeleteScheduleItemsOlderThanAsync(accountId, scheduleIdString, olderThanDateTimeString, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleItemsOlderThanAsync(string accountId, string scheduleIdString, string olderThanDateTimeString, object userState) {
            if ((this.DeleteScheduleItemsOlderThanOperationCompleted == null)) {
                this.DeleteScheduleItemsOlderThanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleItemsOlderThanOperationCompleted);
            }
            this.InvokeAsync("DeleteScheduleItemsOlderThan", new object[] {
                        accountId,
                        scheduleIdString,
                        olderThanDateTimeString}, this.DeleteScheduleItemsOlderThanOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleItemsOlderThanOperationCompleted(object arg) {
            if ((this.DeleteScheduleItemsOlderThanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleItemsOlderThanCompleted(this, new DeleteScheduleItemsOlderThanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentForEncryptedContentIdCompletedEventHandler(object sender, GetContentForEncryptedContentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentForEncryptedContentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentForEncryptedContentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentPricesCompletedEventHandler(object sender, GetContentPricesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentPricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentPricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentsAvailableForPriceCompletedEventHandler(object sender, GetContentsAvailableForPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentsAvailableForPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentsAvailableForPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentForIdCompletedEventHandler(object sender, GetContentForIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentForIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentForIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentForObjectIdCompletedEventHandler(object sender, GetContentForObjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentForObjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentForObjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentForExternalIdCompletedEventHandler(object sender, GetContentForExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentForExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentForExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentForExternalId2CompletedEventHandler(object sender, GetContentForExternalId2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentForExternalId2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentForExternalId2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddContentRelationCompletedEventHandler(object sender, AddContentRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContentRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContentRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteContentCompletedEventHandler(object sender, DeleteContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteContentAndSourcesCompletedEventHandler(object sender, DeleteContentAndSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContentAndSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContentAndSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentListCompletedEventHandler(object sender, GetContentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentAgreementContentCompletedEventHandler(object sender, GetContentAgreementContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentAgreementContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentAgreementContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReplaceContentInContentAgreementCompletedEventHandler(object sender, ReplaceContentInContentAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceContentInContentAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceContentInContentAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddContentPriceToServiceCompletedEventHandler(object sender, AddContentPriceToServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContentPriceToServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContentPriceToServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddAllContentToServiceWithPriceCompletedEventHandler(object sender, AddAllContentToServiceWithPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAllContentToServiceWithPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAllContentToServiceWithPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveContentFromServicePriceCompletedEventHandler(object sender, RemoveContentFromServicePriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveContentFromServicePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveContentFromServicePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateContentPriceCompletedEventHandler(object sender, UpdateContentPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveOrUpdateContentListCompletedEventHandler(object sender, SaveOrUpdateContentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOrUpdateContentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOrUpdateContentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImportProfileInfoCompletedEventHandler(object sender, GetImportProfileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportProfileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportProfileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImportServerCompletedEventHandler(object sender, GetImportServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddImportServerCompletedEventHandler(object sender, AddImportServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImportServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImportServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddContentAssetServerCompletedEventHandler(object sender, AddContentAssetServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContentAssetServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContentAssetServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddContentCompletedEventHandler(object sender, AddContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateContentCompletedEventHandler(object sender, UpdateContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateContent2CompletedEventHandler(object sender, UpdateContent2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContent2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContent2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateContent3CompletedEventHandler(object sender, UpdateContent3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContent3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContent3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateContentLimitedCompletedEventHandler(object sender, UpdateContentLimitedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateContentSetCompletedEventHandler(object sender, UpdateContentSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateContentPropertiesInBulkCompletedEventHandler(object sender, UpdateContentPropertiesInBulkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentPropertiesInBulkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentPropertiesInBulkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportContentCompletedEventHandler(object sender, ImportContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportAssetUpdateCompletedEventHandler(object sender, ImportAssetUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportAssetUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportAssetUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentCompletedEventHandler(object sender, GetContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentLimitedFromPropertiesCompletedEventHandler(object sender, GetContentLimitedFromPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentLimitedFromPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentLimitedFromPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentFromPropertiesCompletedEventHandler(object sender, GetContentFromPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentFromPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentFromPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOngoingEpgsCompletedEventHandler(object sender, GetOngoingEpgsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOngoingEpgsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOngoingEpgsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentInfoCompletedEventHandler(object sender, GetContentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentInfoAsXMLCompletedEventHandler(object sender, GetContentInfoAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentInfoAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentInfoAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentInfoForServiceCompletedEventHandler(object sender, GetContentInfoForServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentInfoForServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentInfoForServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAssetsCompletedEventHandler(object sender, GetAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAssetNamesCompletedEventHandler(object sender, GetAssetNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentRightsOwnersCompletedEventHandler(object sender, GetContentRightsOwnersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentRightsOwnersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentRightsOwnersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateAssetCompletedEventHandler(object sender, UpdateAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentAssetServerCompletedEventHandler(object sender, GetContentAssetServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentAssetServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentAssetServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentAssetServerNamesCompletedEventHandler(object sender, GetContentAssetServerNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentAssetServerNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentAssetServerNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteContentAssetServerCompletedEventHandler(object sender, DeleteContentAssetServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContentAssetServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContentAssetServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentInfoForContentListCompletedEventHandler(object sender, GetContentInfoForContentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentInfoForContentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentInfoForContentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentAgreementInfo2CompletedEventHandler(object sender, GetContentAgreementInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentAgreementInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentAgreementInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentAgreementInfoCompletedEventHandler(object sender, GetContentAgreementInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentAgreementInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentAgreementInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateDRMRevocationResponseCompletedEventHandler(object sender, GenerateDRMRevocationResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDRMRevocationResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDRMRevocationResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateDRMLicenseForLicenseIdCompletedEventHandler(object sender, GenerateDRMLicenseForLicenseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDRMLicenseForLicenseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDRMLicenseForLicenseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateDRMLicenseCompletedEventHandler(object sender, GenerateDRMLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDRMLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDRMLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentURICompletedEventHandler(object sender, GetContentURICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentURICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentURICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContentURIFromEncryptedContentIdCompletedEventHandler(object sender, GetContentURIFromEncryptedContentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentURIFromEncryptedContentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentURIFromEncryptedContentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FindContentBySearchTagCompletedEventHandler(object sender, FindContentBySearchTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindContentBySearchTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindContentBySearchTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDownloadTicketCompletedEventHandler(object sender, GetDownloadTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownloadTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownloadTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetScheduleItemsForScheduleIdCompletedEventHandler(object sender, GetScheduleItemsForScheduleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleItemsForScheduleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleItemsForScheduleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUpcomingScheduleItemsCompletedEventHandler(object sender, GetUpcomingScheduleItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpcomingScheduleItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpcomingScheduleItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddScheduleItemsCompletedEventHandler(object sender, AddScheduleItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateScheduleItemsCompletedEventHandler(object sender, UpdateScheduleItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateScheduleItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateScheduleItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteScheduleItemCompletedEventHandler(object sender, DeleteScheduleItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteScheduleItemsOlderThanCompletedEventHandler(object sender, DeleteScheduleItemsOlderThanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleItemsOlderThanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleItemsOlderThanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591